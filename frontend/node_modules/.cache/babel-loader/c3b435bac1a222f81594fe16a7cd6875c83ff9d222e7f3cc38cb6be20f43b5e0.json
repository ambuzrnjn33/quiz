{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/project/frontend/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz(_ref) {\n  _s();\n  let {\n    questions,\n    onGrade\n  } = _ref;\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill(null));\n  const [gradedQuestions, setGradedQuestions] = useState([]);\n  const [isGraded, setIsGraded] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await axios.post('/api/grade', {\n      quizQuestions: questions,\n      userAnswers\n    });\n    const {\n      gradedQuestions,\n      score\n    } = response.data;\n    setGradedQuestions(gradedQuestions);\n    onGrade(score);\n    setIsGraded(true);\n  };\n  const handleChange = (index, answer) => {\n    const newUserAnswers = [...userAnswers];\n    newUserAnswers[index] = answer;\n    setUserAnswers(newUserAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [questions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n      question: question,\n      answer: userAnswers[index],\n      gradedQuestion: gradedQuestions[index],\n      onChange: answer => handleChange(index, answer)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isGraded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Feedback:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: gradedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [question.text, \" (\", question.isCorrect ? 'Correct' : 'Incorrect', \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"GOijL46Zq4rlVJZfYYJAkJwMNMg=\");\n_c = Quiz;\nQuiz.propTypes = {\n  questions: PropTypes.array.isRequired,\n  onGrade: PropTypes.func.isRequired\n};\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","PropTypes","Question","jsxDEV","_jsxDEV","Quiz","_ref","_s","questions","onGrade","userAnswers","setUserAnswers","Array","length","fill","gradedQuestions","setGradedQuestions","isGraded","setIsGraded","handleSubmit","event","preventDefault","response","axios","post","quizQuestions","score","data","handleChange","index","answer","newUserAnswers","onSubmit","children","map","question","gradedQuestion","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","text","isCorrect","_c","propTypes","array","isRequired","func","$RefreshReg$"],"sources":["/home/ubuntu/project/frontend/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\n\nfunction Quiz({ questions, onGrade }) {\n  const [userAnswers, setUserAnswers] = useState(Array(questions.length).fill(null));\n  const [gradedQuestions, setGradedQuestions] = useState([]);\n  const [isGraded, setIsGraded] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const response = await axios.post('/api/grade', { quizQuestions: questions, userAnswers });\n    const { gradedQuestions, score } = response.data;\n    setGradedQuestions(gradedQuestions);\n    onGrade(score);\n    setIsGraded(true);\n  };\n\n  const handleChange = (index, answer) => {\n    const newUserAnswers = [...userAnswers];\n    newUserAnswers[index] = answer;\n    setUserAnswers(newUserAnswers);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {questions.map((question, index) => (\n        <Question\n          key={index}\n          question={question}\n          answer={userAnswers[index]}\n          gradedQuestion={gradedQuestions[index]}\n          onChange={(answer) => handleChange(index, answer)}\n        />\n      ))}\n      <button type=\"submit\">Submit</button>\n      {isGraded && (\n        <div>\n          <h2>Feedback:</h2>\n          <ul>\n            {gradedQuestions.map((question, index) => (\n              <li key={index}>\n                {question.text} ({question.isCorrect ? 'Correct' : 'Incorrect'})\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </form>\n  );\n}\n\nQuiz.propTypes = {\n  questions: PropTypes.array.isRequired,\n  onGrade: PropTypes.func.isRequired,\n};\n\nexport default Quiz;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}